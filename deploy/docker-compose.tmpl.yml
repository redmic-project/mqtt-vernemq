version: '3.5'

services:
  vmq-redis:
    image: ${REDIS_IMAGE_NAME:-redis}:${REDIS_IMAGE_TAG:-alpine}
    command: redis-server --appendonly yes
    networks:
      vernemq-net:
    volumes:
      - redis-data-vol:/data
    deploy:
      mode: replicated
      replicas: ${REDIS_REPLICAS:-1}
      restart_policy:
        delay: ${REDIS_RESTART_DELAY:-5s}
      update_config:
        delay: ${REDIS_UPDATE_DELAY:-1m}
      resources:
        limits:
          cpus: '${REDIS_RESOURCES_LIMITS_CPUS:-0.1}'
          memory: ${REDIS_RESOURCES_LIMITS_MEMORY:-32M}
        reservations:
          cpus: '${REDIS_RESOURCES_RESERVATIONS_CPUS:-0.001}'
          memory: ${REDIS_RESOURCES_RESERVATIONS_MEMORY:-8M}

  vernemq:
    image: ${VERNEMQ_IMAGE_NAME:-vernemq/vernemq}:${VERNEMQ_IMAGE_TAG:-latest-alpine}
    environment:
      DOCKER_VERNEMQ_ALLOW_ANONYMOUS:
      DOCKER_IP_ADDRESS:
      DOCKER_VERNEMQ_DISTRIBUTED_COOKIE:
      DOCKER_VERNEMQ_PLUGINS__VMQ_PASSWD:
      DOCKER_VERNEMQ_PLUGINS__VMQ_ACL:
      DOCKER_VERNEMQ_PLUGINS__VMQ_DIVERSITY:
      DOCKER_VERNEMQ_VMQ_DIVERSITY__AUTH_REDIS__ENABLED:
      DOCKER_VERNEMQ_VMQ_DIVERSITY__REDIS__HOST:
      DOCKER_VERNEMQ_VMQ_DIVERSITY__REDIS__PORT:
      DOCKER_VERNEMQ_ACCEPT_EULA:
    networks:
      vernemq-net:
      metric-net:
      traefik-net:
    ports:
      - target: ${MQTT_PORT}
        published: ${EXTERNAL_MQTT_PORT}
        protocol: tcp
        mode: ${PORT_MODE}
      - target: ${MQTTWS_PORT}
        published: ${EXTERNAL_MQTTWS_PORT}
        protocol: tcp
        mode: ${PORT_MODE}
    healthcheck:
      test: wget -q -O - http://127.0.0.1:${HTTP_PORT}/health
      interval: ${HEALTHCHECK_INTERVAL:-30s}
      timeout: ${HEALTHCHECK_TIMEOUT:-15s}
      retries: ${HEALTHCHECK_RETRIES:-5}
      start_period: ${HEALTHCHECK_START_PERIOD:-1m}
    volumes:
      - vernemq-data-vol:/vernemq/data
      - vernemq-conf-vol:/vernemq/etc
      - vernemq-log-vol:/vernemq/log
    deploy:
      mode: replicated
      replicas: ${VERNEMQ_REPLICAS:-1}
      restart_policy:
        delay: ${VERNEMQ_RESTART_DELAY:-10s}
      update_config:
        delay: ${VERNEMQ_UPDATE_DELAY:-1m}
      labels:
        traefik.enable: ${TRAEFIK_ENABLE:-true}
        traefik.http.routers.vernemq.entrypoints: ${TRAEFIK_ENTRYPOINT:-http}
        traefik.http.routers.vernemq.rule: Host(`${TRAEFIK_SUBDOMAIN}.${PUBLIC_HOSTNAME}`)
        traefik.http.middlewares.vernemq-root-redirect.redirectregex.regex: ^(.*://${TRAEFIK_SUBDOMAIN}.${PUBLIC_HOSTNAME})/$$
        traefik.http.middlewares.vernemq-root-redirect.redirectregex.replacement: $$1/status
        traefik.http.middlewares.vernemq-root-redirect.redirectregex.permanent: 'true'
        traefik.http.routers.vernemq.middlewares: vernemq-root-redirect
        traefik.http.services.vernemq.loadbalancer.server.port: ${HTTP_PORT}
        traefik.http.services.vernemq.loadbalancer.healthcheck.path: ${TRAEFIK_HEALTHCHECK_PATH:-/health}
        traefik.http.services.vernemq.loadbalancer.healthcheck.interval: ${TRAEFIK_HEALTHCHECK_INTERVAL:-1m}
        traefik.http.services.vernemq.loadbalancer.healthcheck.timeout: ${TRAEFIK_HEALTHCHECK_TIMEOUT:-15s}
      resources:
        limits:
          cpus: '${VERNEMQ_RESOURCES_LIMITS_CPUS:-1}'
          memory: ${VERNEMQ_RESOURCES_LIMITS_MEMORY:-256M}
        reservations:
          cpus: '${VERNEMQ_RESOURCES_RESERVATIONS_CPUS:-0.001}'
          memory: ${VERNEMQ_RESOURCES_RESERVATIONS_MEMORY:-128M}

networks:
  vernemq-net:
    name: ${VERNEMQ_NET_NAME:-vernemq-net}
    driver: ${VERNEMQ_NET_DRIVER:-overlay}
    attachable: ${VERNEMQ_NET_ATTACHABLE:-false}

  metric-net:
    name: ${METRIC_NET_NAME:-metric-net}
    driver: ${METRIC_NET_DRIVER:-overlay}
    external: true

  traefik-net:
    name: ${TRAEFIK_NET_NAME:-traefik-net}
    driver: ${TRAEFIK_NET_DRIVER:-overlay}
    external: true

volumes:
  vernemq-log-vol:
    name: ${VERNEMQ_LOG_VOL_NAME:-vernemq-log-vol}
